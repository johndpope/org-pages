
#+SETUPFILE: setup.org
#+TITLE: ubuntu  note
* Mint&Ubuntu install&config
 the new os should do this for update 
  - config software sources
  - sudo apt-get update
  - sudo apt-get upgrate
** develop env conf
   目前想要实现的开发环境是win7环境下使用idea开发java，python

   但是我想将代码，python的依赖包 安装在我的vmware ubuntu上面

   实现本地使用ide开发，代码运行在远端linux上，环境使用远端环境

   查看了下资料，idea官方说明有 [[http://www.jetbrains.com/help/idea/2017.1/remote-host-tool-window.html][sftp ]]这个功能

   创建sftp服务连接 tool -> deployment -> + 

   实现的功能：
   1. 本地开发的java项目备份到远端linux目录

      RemoteHost内配置好mappings，本地项目备份到ubuntu的路径
      
      右键项目Upload to 服务器
   2. 使用linux python环境 写python项目

      F4 -> project -> +  -> add remote
      
      只需要本地开发编码不报错，运行可以同步到服务器运行
      
      
0** vmware install ubuntu network conf
   作者写的很认真,[[http://www.cnblogs.com/objectorl/archive/2012/09/27/vmware-ubuntu-nat-static-ip-settings.html][参考链接]]

   1. vmwarenet8 开启
   2. DHCP Settings 查看ip范围
   3. NAT Settings 内查看默认网关
   4. sudo vi /etc/network/interfaces
      #+BEGIN_SRC 
      auto eth0
      iface eth0 inet static
      address 192.168.91.200 
      netmask 255.255.255.0  
      gateway 192.168.91.2 
      dns-nameservers 192.168.91.2
      #+END_SRC
   5. 重启机器 ubuntu重启网卡没用！
   
** 挂载磁盘
   在文件中添加要挂载的分区和文件目录可以修改文件

   /etc/fstab

   /dev/sda5/    media/win    ntfs    defaults   02

   然后 mount -a

   1. 查看几块硬盘
   
      sudo fdisk -l |grep sd
   
   2. 创建分区
   
      虚拟机现有20g的硬盘,使用fdisk划分磁盘
       
      sudo fdisk /dev/sda
   
      #+BEGIN_VERSE
         m  帮助信息  
         n 创建分区
         e 扩展分区    +5G  pppp/pppe
         p 打印分区
         t 分区类型 L  (lvm)
         w 写入保存分区
      #+END_VERSE

   3. 格式化 分区

   - LVM
     pv --> vg --> lv
     参考: http://blog.sina.com.cn/s/blog_b77735d20101e5cn.html
     http://aurthurxlc.github.io/Aurthur-2017/Centos-7-extend-lvm-volume.html

#+BEGIN_SRC 
  fdisk -l | grep sd
  fdisk /dev/sda
  partprobe
  pvdisplay
  pvcreate /dev/sda3
  vgdisplay
  vgextend centos /dev/sda3
  lvdisplay
  lvcreate -L 3.31G -n manue1 centos
  mkfs.xfs /dev/centos/manue1
  lvremove -f /dev/centos/manue1
  lvextend -l +100%FREE /dev/centos/root
  df -Th
  xfs_growfs /dev/centos/root
#+END_SRC
** pinyin input
  1. install chinese language pack

     sudo apt-get install language-pack-zh-hans language-pack-gnome-zh-hans libreoffice-l10n-zh-cn thunderbird-locale-zh-hans firefox-locale-zh-hans

  2. install Fcitx

     sudo apt-get install fcitx fcitx-table-wubi-large fcitx-frontend-all fcitx-frontend-gtk2 fcitx-frontend-gtk3 fcitx-frontend-qt4 fcitx-config-gtk fcitx-ui-classic fcitx-module-kimpanel fcitx-module-dbus libopencc1 fcitx-libs-qt

  3. install sugou input

     to the official website to download
  4. im-config-->fcitx
** chrome
   #+BEGIN_VERSE
   64 位

   wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

   sudo gdebi google-chrome-stable_current_amd64.deb

   32 位

   wget https://dl.google.com/linux/direct/google-chrome-stable_current_i386.deb

   sudo gdebi google-chrome-stable_current_i386.deb
   
   #+END_VERSE
  
** emacs
** vim
** ubuntu install gdebi
   sudo apt-get install gdebi
** java
    * step1 uninstall openjdk

       sudo apt-get purge openjdk-\*

    * step2 install jdk

      1. download jdk1.8

         [[http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html][下载地址]]

      2. install
#+BEGIN_VERSE
         mkdir -p ~/opt/java/jdk1.8
         tar -zxvf jdk-8u45-linux-i586.tar.gz
         cd jdk1.8.0_45/
         cp  * ~/opt/java/jdk1.8/ -rf
#+END_VERSE
      3. set up environment
       + vim ~/.bashrc
         #+BEGIN_SRC 
         export JAVA_HOME=/home/manue1/opt/java/jdk1.8
         export JRE_HOME=${JAVA_HOME}/jre
         export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
         export PATH=${JAVA_HOME}/bin:$PATH
         #+END_SRC   
       + source .bashrc

         java -version
      4. change jdk version

         javac -version 要与 java -version 一致
         
** install apache-tomcat
    * step1 download tomcat tar to ~/opt

      cd ~/opt

      tar -zxvf ~/Downloads/apache-tomcat-8.0.23.tar.gz  -C .
    * step2 config environment
      + view env
        #+BEGIN_VERSE
               java -version
               echo $JAVA_HOME
               echo $JDK_HOME
        #+END_VERSE
      + change configuration .bachrc

       vim ~/.bashrc 

       #+BEGIN_SRC
        #jdk config
        export JAVA_HOME=/usr/java/jdk1.8
        export CALSSPATH=$JAVA_HOME/lib/*.*
        #tomcat config
        export TOMCAT_HOME=~/opt/tomcat
        export CATALINA_HOME=~/opt/tomcat
        #path config
        export PATH=$PATH:$JAVA_HOME/bin:$TOMCAT_HOME/bin
       #+END_SRC
    * step3 目录权限
       当前用户可读可执行
       chwon manue1 ~/opt/tomcat
       chmod -R +x ~/opt/tomcat/*  
       chmod +r ~/opt/tomcat/conf/*
    * step4 关闭防火墙

      sudo service iptables stop

      sudo chkconfig iptables off
    * step5 how to use

      sh tomcat/bin/startup.sh 

      sh tomcat/bin/shutdown.sh 
** install eclipse
    * step1 download & install

      https://eclipse.org/downloads/

      tar -zxvf  ~/Downloads/eclipse-jee-mars-R-linux-gtk-x86_64.tar.gz 

      copy to opt/eclipse
      
    * step2 create shortcut

      sudo ln -s ~/opt/eclipse/eclipse /usr/local/bin/eclipse

    * step2 安装常用插件
      + theme

        Eclipse Moonrise UI Theme

        Eclipse color theme

      + vim
        vrapper
** install mybase for linux
   * download

     http://www.wjjsoft.com/mybase_cn.html#download

   * install

     sudo ln -s ~/opt/myBase7/myBase /usr/local/bin/mybase

** install vmware workstation
   key:1F04Z-6D111-7Z029-AV0Q4-3AEH8

   卸载 vmware 

   vmware-installer -l

   sudo vmware-installer --uninstall-product vmware-workstation

   安装 vmware需要添加执行权限

   chmod a+x 
** chm 阅读
     sudo apt-get  update

     sudo apt-get install kchmviewer

** smplayer 视频软件
   sudo apt-get install  smplayer

   ubuntu 内置的 video 软件很好用
** xbmc 安装
   强大的媒体中心

   sudo add-apt-repository ppa:team-xbmc 

   sudo apt-get update

   sudo apt-get install xbmc
** ubuntu15.04 wifi 热点共享
  + 1.下载

    在 ubuntu 软件中心搜索 kde nm connection

  + 2.配置
#+BEGIN_VERSE
    kde5-nm-connection-editor
    跳出连接编辑器的图形界面 在图形界面点击
    添加-->Wireless(shared)
    弹出 New Connection (New 802-11-wireless connection)图形界面
    Connection name:更改为 mywifi(默认为 New 802-11-wireless connection)
    SSID:更改为 mywifi(默认为 my_shared_connection)
    模式:选择 Access Point
    Restrict to device:选择你的无线网卡
    点击无线安全选项卡
    安全:选择 WPA & WPA2 Personal
    密码:填入你要设置的密码(至少 8 位)
#+END_VERSE
  + 3.连接
#+BEGIN_VERSE
    我们点击最上方网络管理的图标，选择 连接到隐藏的 Wi-Fi 网络
    Wifi 适配器:选择我们设置了的无线网络
    连接:选择我们刚刚建立的连接名称(mywifi)
    之后网络名称(SSID)，Wi-Fi 安全性,密码会自动填写并变成灰色
    点击确定
#+END_VERSE
** ubuntu 安装 vsftp
   也可以使用 filezilla 客户端

   sudo apt-get install filezilla


   sudo apt-get install vsftpd

   然后修改/etc/vsftpd.conf 文件
   
   修改如下几行：

#+BEGIN_SRC 
   anonymous_enable=YES    #设置匿名可登录
   
   anonymous_enable=YES    #设置匿名可登录

   local_enable=YES        #本地用户允许登录
   
   local_enable=YES        #本地用户允许登录
   
   write_enable=YES        #用户是否有写的权限

   write_enable=YES        #用户是否有写的权限

   anon_upload_enable=YES   #允许匿名用户上传

   anon_upload_enable=YES   #允许匿名用户上传

   anon_mkdir_write_enable=YES   #允许匿名用户创建目录文件

   anon_mkdir_write_enable=YES   #允许匿名用户创建目录文件
#+END_SRC

   其他的就不用管了，保存文件。
   
   重启 vsftpd 服务器

   sudo service vsftpd restart
   
   我们在/srv/ftp 文件夹新建两个文件夹，一个是 upload，一个是 download

   执行下面的两条指令

   sudo chmod -R 777 /srv/ftp/upload
   
   sudo chmod -R 777 /srv/ftp/upload
   
   sudo chmod -R 755 /srv/ftp/download

   sudo chmod -R 755 /srv/ftp/download
** ubuntu 安装 samba
   * step 1: samba 安装 

      sudo apt-get install samba

   * step 2: 创建共享目录

      mkdir ~/samba-share

      sudo chmod 777 ~/samba-share/
   * step 3: 创建 samba 配置文件

     1. 保存现有的配置文件

        sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak

     2. 修改现配置文件

        sudo gedit /etc/samba/smb.conf   

        在 smb.conf 最后添加
#+BEGIN_SRC 
       [share]
         path = /home/manue1/share
         available = yes
         browsealbe = yes
         public = yes
         writable = yes
#+END_SRC
   * step 4: 创建 samba 用户

     sudo touch /etc/samba/smbpasswd

     sudo smbpasswd -a manue1
   * step 5: 重启 samba 服务器

     sudo /etc/init.d/samba restart
** ubuntu 安装 shutter 截图工具
   sudo apt-get install shutter
** ubuntu 安装百度云
   [[https://github.com/LiuLang/bcloud-packages][下载]]
** ubuntu 安装 BT
   * Deluge

    sudo add-apt-repository ppa:deluge-team/ppa 

    sudo apt-get update

    sudo apt-get install deluge
   * Vuze

     sudo apt-get install vuze
** ssh 翻墙图形化利器
   sudo apt-get install gstm
** ubuntu shutter 截图工具
   sudo apt-get install shutter
** ubuntu 删除不必要的插件
   *  删除 libreoffice

      sudo apt-get remove libreoffice-common
   *  删除 Amazon 的链接

      sudo apt-get remove unity-webapps-common
   *  删除不用的自带软件

      sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku  landscape-client-ui-install
      删除备份软件

      sudo apt-get remove onboard deja-dup
** ubuntu 安装经典菜单指示器
#+BEGIN_VERSE
   sudo add-apt-repository ppa:diesch/testing  
   sudo apt-get update  
   sudo apt-get install classicmenu-indicator
#+END_VERSE
** ubuntu 安装 xmind 思维导图软件
** ubuntu 安装局域网流量监控软件
   * 自带 tcpdump

   * wireshark 

     前身叫 ethereal
   * iptraf 

    sudo apt-get install iptraf
   * nbtscan
     
** ruby install
 sudo apt-add-repository ppa:brightbox/ruby-ng
 sudo apt-get update
 sudo apt-get install ruby2.3 ruby2.3-dev
 没有下载成功 
1. ruby install
    下载源码编译安装
    ./configure --prefix=/home/manue1/opt/ruby
        apt-get install build-essential
        apt-get install gcc 
      make && make install

2. gem install
    官网下载编译安装
ruby setup.rb --prefix=dir
    #+BEGIN_SRC 
    出现 ruby cannot load such file -- zlib 问题的解决方法
        cannot load such file -- zlib
        sudo apt-get install zlib1g-dev
        cd /ruby-source-files/ext/zlib
        sudo ruby extconf.rb
        sudo  make
        sudo make install

    #+END_SRC

3. bundler install
   gem sources --add http://gems.ruby-china.org/ --remove https://rubygems.org/
   需要安装 openssl 支持 https
   gem install bundler
   #+BEGIN_SRC 

    出现 ruby cannot load such file -- zlib 问题的解决方法
    sudo apt-get install libssl-dev libreadline-dev libgdbm-dev
    cd ruby-2.3.3/ext/openssl  
    ruby extconf.rb --with-openssl-include=/usr/local/ssl/include/ --with-openssl-lib=/usr/local/ssl/lib  
    make && make install  
 #+END_SRC
   #+BEGIN_SRC 
 cannot load such file -- typhoeus
 类似问题,解决办法：gem install  typhoeus

#+END_SRC
** cisco iou install
  [[http://bandari.fans.blog.163.com/blog/static/1694189062015012115425957/][iou-web 配置]]

 [[https://github.com/dainok/iou-web][ deb 文件下载]] 

  apache2.conf  中添加/opt/iou/html 根目录
   
1. 环境配置

   sudo apt-get install -y lib32z1 lib32ncurses5 lib32bz2-1.0 libssl1.0.0:i386 libtinfo5:i386

   sudo ln -s /lib/i386-linux-gnu/libcrypto.so.1.0.0 /usr/lib/libcrypto.so.4
** xsel
   sudo apt-get install xsel 
   