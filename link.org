#+TITLE: Link notes
* Link notes

** TODO [2019-04-06 Sat] ubuntu服务器上使用Chrome Headless
  #+BEGIN_QUOTE
  https://jiayi.space/post/zai-ubuntufu-wu-qi-shang-shi-yong-chrome-headless 

  SCHEDULED:<2019-04-06 Sat 17:21>
  
  #+END_QUOTE

** TODO [2019-03-27 Wed] Ceph 分布式存储系统
  #+BEGIN_QUOTE
  https://blog.csdn.net/uxiAD7442KMy1X86DtM3/article/details/81059215 

  SCHEDULED:<2019-03-27 Wed 23:04>
  
  #+END_QUOTE

** TODO [2019-03-24 Sun] org-mode 代码块嵌套
  #+BEGIN_QUOTE
  https://brantou.github.io/2017/04/01/babel-intro/ 

  SCHEDULED:<2019-03-24 Sun 02:11>
  

- 函数调用


#+NAME: m
#+BEGIN_SRC  go
  func min(a, b int) int {
    if a > b {
      return b
    } else {
      return a
    }
  }
#+END_SRC
#+NAME: get-min
#+BEGIN_SRC go :var a=2 b=1 :imports "fmt" :noweb strip-export
<<m>>
func main() {
  fmt.Println(min(a,b))
}
#+END_SRC

#+RESULTS: get-min
: 1

#+call: get-min(12,11)

#+RESULTS:
: 11


多参数
#+NAME: sum
#+BEGIN_SRC go :imports "fmt" :var a=12 b=13
  fmt.Println(a+b)
#+END_SRC
#+call: sum(a=22,b=23)

#+RESULTS:
: 45
  #+END_QUOTE

** TODO [2019-03-18 Mon] 磁力链自动下载
  #+BEGIN_QUOTE
  magnet:?xt=urn:btih:63DBE97B472DE27DD78FC1B7E7823729C0ED27C2

  magnet:?xt=urn:btih:01F0A1C8DD91BD8B13E5FB5D825CBB9760FC2017

  SCHEDULED:<2019-03-18 Mon 04:17>
  
  #+END_QUOTE

** TODO [2019-03-18 Mon] Mac 上安装 Appium 详解
  #+BEGIN_QUOTE
  https://www.jianshu.com/p/4d2770f90bed 

  SCHEDULED:<2019-03-18 Mon 01:17>

  #+BEGIN_SRC python
  {
      "platformName": "Android",
      "deviceName": "emulator-5554",
      "platformVersion": "6.0.1",
      "appPackage": "com.tencent.mm",
      "appActivity": "com.tencent.mm.plugin.webview.ui.tools.WebViewUI",
      "noReset": true
  }
  #+END_SRC

  appPackage和appActivity 获取方式

  #+BEGIN_SRC 

  ~ » adb shell
  root@x86:/ # dumpsys activity | grep mFocusedActivity

  mFocusedActivity: ActivityRecord{7be7a49 u0 com.tencent.mm/.plugin.webview.ui.tools.WebViewUI t9}

  #+END_SRC

  uiautomatorviewer ：用来分析UI控件的图形界面工具，位于SDK目录下的tools文件夹中
  第二个按纽 Device Screenshot 无法获取 adb设备的时候，可以 =adb kill-server= 然后 =adb devices= 重新获取
  
  
  
  #+END_QUOTE
  
** TODO [2019-03-17 Sun] Genymotion install for mac 
  #+BEGIN_QUOTE

  https://blog.csdn.net/stupid56862/article/details/79379574 


  https://blog.csdn.net/weixin_39847926/article/details/82386412


  SCHEDULED:<2019-03-17 Sun 02:48>
  
  修改ADB环境后，拖拽APK到系统内,出现了下面这个问题
  #+BEGIN_EXAMPLE
  An error occured while deploying the file. Please refer to Genymotion logs for more information.
  #+END_EXAMPLE

  解决办法： =adb kill-server=  =adb devices= 重新获取设备即可

  
  https://www.jianshu.com/p/310d930dd62f
  
  抓包Xposed+JustTrustMe关闭SSL证书验证
  安装位置模拟器模块
  
  https://blog.csdn.net/ghy2016/article/details/83422620
  Genymotion-ARM-Translation.zip各安卓版本合集
  这里ARM-Translation 版本一定要与android一致,否则各种app安装异常报错

| 安卓版本    | 代号              | Genymotion-ARM-Translation            | GApps |
| 8.0 – 8.1   | Oreo奥利奥        | ARM_Translation_Oreo.zip              |       |
| 7.0 – 7.1.2 | Nougat牛轧糖      |                                       |       |
| 6.0 – 6.0.1 | Marshmallow棉花糖 | ARM_Translation_Marshmallow.zip       |       |
| 5.0 – 5.1.1 | Lollipop棒棒糖    | ARM_Translation_Lollipop_20160402.zip |       |
| 5.0 – 5.1.1 | Lollipop棒棒糖    | ARM_Translation_Lollipop.zip          |       |
| 4.4 – 4.4.4 | KitKat奇巧巧克力  | ARM-4.4-libhoudini.zip                |       |
| 4.1 – 4.3.1 | Jelly Bean果冻豆  | Genymotion-ARM-Translation_v1.1.zip   |       |
  
  
Xprivacy
有时候微信会检测是否是模拟器登陆，导致帐号被封。根据网友的经验，使用Xprivacy禁用微信的一些请求后可以防止被封。可以自行安装xposed和xprivacy，好像xposed也很好玩。
像imei，摄像头这种。你可以按照xprivacy推荐的配置
https://github.com/M66B/XPrivacy/releases
网络状态（ip地址），位置，命令行，识别码（设备识别信息），IPC等
国际移动设备识别码（International Mobile Equipment Identity，IMEI），即通常所说的手机序列号、
XPOSED IMEI Changer on GG play


安装 GApps（含 Google 市场）


怎么配置感觉都没有网易mumu模拟器好用,这里mumu注意配置wifi的代理mitmproxy的时候，需要将代理IP配置为宿主物理机器的IP

 

  
  
  #+END_QUOTE

** TODO [2019-03-17 Sun] install mitmproxy for mac
  #+BEGIN_QUOTE
  https://docs.mitmproxy.org/stable/overview-installation/ 

  SCHEDULED:<2019-03-17 Sun 02:17>

  brew install mitmproxy

  可以使用 mitmproxy -h 来查看 mitmproxy 的参数及使用方法

  mitmproxy -p 7777 启动端口监听流量 当前模式下？可查看帮助信息

  #+BEGIN_EX AMPLE
基本快捷键

b  保存请求 / 返回头
C  将请求内容导出到粘贴板，按 C 之后会有选择导出哪一部分
d  删除 flow 请求
E  将 flow 导出到文件
w  保存所有 flow 或者该 flow
W  保存该 flow
L  加载保存的 Flow
m  添加 / 取消 Mark 标记，会在请求列表该请求前添加红色圆圈
z  清空 flow list 和 eventlog
/  在详情界面，可以使用 / 来搜索，大小写敏感
i  开启 interception pattern 拦截请求

移动

j, k       上下
h, l        左右
g, G   go to beginning, end
space    下一页
pg up/down   上一页 / 下一页
ctrl+b/ctrl+f    上一页 / 下一页
arrows 箭头     上下左右


全局快捷键
q   退出，或者后退
Q  不提示直接退出
  #+END_EXAMPLE



  
  
  #+END_QUOTE

** DONE [2019-03-17 Sun] install fiddler for mac
   CLOSED: [2019-03-18 Mon 17:39]
   - State "DONE"       from "TODO"       [2019-03-18 Mon 17:39]
  #+BEGIN_QUOTE
  https://www.mono-project.com/download/stable/ 

  1. install mono

     不好意思打扰了 ！ 完全不支持自定义rule 弱爆了 
     
  SCHEDULED:<2019-03-17 Sun 01:27>
  
  #+END_QUOTE

** DONE [2019-03-16 Sat] selenium 使用
   CLOSED: [2019-03-18 Mon 17:40]
   - State "DONE"       from "TODO"       [2019-03-18 Mon 17:40]
  #+BEGIN_QUOTE

  https://blog.csdn.net/weixin_36279318/article/details/79475388 

  selenium之 辨识alert、window以及操作

  https://blog.csdn.net/huilan_same/article/details/52298460

  
  SCHEDULED:<2019-03-16 Sat 02:24>
  
  #+END_QUOTE

** TODO [2019-03-15 Fri] bt之家
  #+BEGIN_QUOTE
  http://www.btbtt.co/ 

  SCHEDULED:<2019-03-15 Fri 18:55>
  
  #+END_QUOTE

** TODO [2019-03-15 Fri] 投资者互动平台 调研
  #+BEGIN_QUOTE
  http://www.csrc.gov.cn/pub/newsite/tzzbh1/tbtzzjy/tbtzzhdpt/201311/t20131119_238498.html 

  SCHEDULED:<2019-03-15 Fri 17:01>
  
  #+END_QUOTE

** TODO [2019-03-15 Fri] 互易动
  #+BEGIN_QUOTE
  http://irm.cninfo.com.cn/szse/index.html 

  SCHEDULED:<2019-03-15 Fri 14:38>
  
  #+END_QUOTE

** TODO [2019-03-15 Fri] 全景路演天下 资讯
  #+BEGIN_QUOTE
  http://rs.p5w.net/html/89956.shtml 

  SCHEDULED:<2019-03-15 Fri 14:29>
  
  #+END_QUOTE

** TODO [2019-03-14 Thu] 工业和信息化部
  #+BEGIN_QUOTE
  http://www.miit.gov.cn/n1146295/n1652858/n1653100/index.html 

  SCHEDULED:<2019-03-14 Thu 14:05>
  
  #+END_QUOTE

** TODO [2019-03-04 Mon] 资源共享 ed2000
  #+BEGIN_QUOTE
  http://www.ed2000.com/Type/%E7%94%B5%E5%BD%B1 

  SCHEDULED:<2019-03-04 Mon 19:15>
  
  #+END_QUOTE

** TODO [2019-03-04 Mon] 巨潮资讯网站（中国证监会指定信息披露网站）信息分类
  #+BEGIN_QUOTE
  http://www.cninfo.com.cn/information/companyinfo_n.html?brief?szmb000998 

  SCHEDULED:<2019-03-04 Mon 11:22>
  
  #+END_QUOTE

** TODO [2019-03-02 Sat] 虎嗅24小时资讯爬虫
  #+BEGIN_QUOTE
  https://www.huxiu.com/moment 

  SCHEDULED:<2019-03-02 Sat 20:57>
  
  #+END_QUOTE

** TODO [2019-02-27 Wed] Go语言高级编程(Advanced Go Programming)
  #+BEGIN_QUOTE
  https://chai2010.cn/advanced-go-programming-book/ 

  SCHEDULED:<2019-02-27 Wed 11:35>
  
  #+END_QUOTE

** TODO [2019-02-24 Sun] sm.ms 免费图床
  #+BEGIN_QUOTE
  https://sm.ms/ 

  SCHEDULED:<2019-02-24 Sun 19:52>
  
  #+END_QUOTE

** TODO [2019-02-24 Sun] 豆瓣api
  #+BEGIN_QUOTE
  https://www.jianshu.com/p/a7e51129b042 

  SCHEDULED:<2019-02-24 Sun 19:21>
  
  #+END_QUOTE

** TODO [2019-02-24 Sun] 豆瓣热映榜单
  #+BEGIN_QUOTE
  https://api.douban.com/v2/movie/in_theaters?city=%E5%8C%97%E4%BA%AC&start=0&count=21 

  SCHEDULED:<2019-02-24 Sun 19:20>
  
  #+END_QUOTE

** DONE [2019-02-24 Sun] 胖鸟电影利用api爬资源
   CLOSED: [2019-02-26 Tue 18:10]
   - State "DONE"       from "TODO"       [2019-02-26 Tue 18:10]
  #+BEGIN_QUOTE
  http://www.pniao.com/API/dbApi/dbPlugin/27077068 

  SCHEDULED:<2019-02-24 Sun 02:13>
   "
  #+END_QUOTE
  
** TODO [2019-02-23 Sat] telegram bot flask 框架部署
  #+BEGIN_QUOTE
  https://medium.com/@zaoldyeck9970/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%80%8E%E9%BA%BC%E6%89%93%E9%80%A0-telegram-bot-a7b539c3402a 

  SCHEDULED:<2019-02-23 Sat 14:18>
  
 - *取得使用者訊息的兩種方法－Long Polling vs Webhook*
  
   1. Long Polling 

     是指程式間隔一定時間透過 getUpdates（上面所使用的方法）取得訊息，
     缺點是浪費資源、不夠即時，所以適合在程式還沒有 deploy，在 develop 和 test 階段時使用。

   2. Webhook 

      是指向 Telegram 設定一組 callback url，
      只要當使用者傳送訊息給 Chatbot，Telegram 就會把用息連同metada透過url傳給 web server。
      適合在程式已經 deploy，有固定 url 的 production 環境使用。

 - *Prepare development environment*

 - *ngrok 服務*

   https://dashboard.ngrok.com/get-started

   转发本地端口地址到外网访问


 - pyrogram
   
   #+BEGIN_EXAMPLE
   
    HTTP        HTTP/MTProto    MTProto
    [You] <---> [Bot API] <---> [Telegram]

    MTProto          MTProto
    [Pyrogram] <---> [Telegram]

   #+END_EXAMPLE

 - Telethon


  #+END_QUOTE

** TODO [2019-02-22 Fri] go语言圣经
  #+BEGIN_QUOTE
  https://yar999.gitbooks.io/gopl-zh/content/ 

  SCHEDULED:<2019-02-22 Fri 12:52>
  
  #+END_QUOTE

** TODO [2019-02-22 Fri]  Setting up Emacs for Java Development
  #+BEGIN_QUOTE
  http://www.goldsborough.me/emacs,/java/2016/02/24/22-54-16-setting_up_emacs_for_java_development/ 

  SCHEDULED:<2019-02-22 Fri 11:16>

  
  #+END_QUOTE

  #+BEGIN_SRC java :classname Test
  class Test {
      public static void main(String[] args) {
          System.out.println("Hello world!");
      }
  }
   #+END_SRC

   #+RESULTS:
   : Hello world!
  
** TODO [2019-02-20 Wed] twitter 财经真相更新内容 
  #+BEGIN_QUOTE
  https://twitter.com/caijingxiang 

  https://tweettunnel.com/caijingxiang

  SCHEDULED:<2019-02-20 Wed 20:32>
  
  #+END_QUOTE

** TODO [2019-02-18 Mon] build-web-application-with-golang
  #+BEGIN_QUOTE
  https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/preface.md 

  SCHEDULED:<2019-02-18 Mon 18:12>
  
  #+END_QUOTE

** TODO [2019-02-13 Wed] emacs blog
  #+BEGIN_QUOTE
  http://nagajamu.com/2018/11/06/resources/#emacs%E4%B9%8B%E9%AD%82 

  SCHEDULED:<2019-02-13 Wed 23:44>
  
  #+END_QUOTE

** TODO [2019-02-01 Fri] 影视资源网站汇总


  #+BEGIN_QUOTE
  chrome-extension://jinjaccalgkegednnccohejagnlnfdag/options/index.html#scripts/2 

  SCHEDULED:<2019-02-01 Fri 14:49>
  
  #+BEGIN_SRC python
  {
             "name": "公网资源",
             "sites": {
                 "云播网": {
                     "title": "http://www.yunbowang.cn/index.php?m=vod-search&wd=",
                     "selector": "div.container div.col-xs-7"
                 },
                 "胖鸟电影": {

                     "title": "http://www.pniao.com/Mov/so/",
                     "selector": "div.mainContainer div.movieFlag.eachOne"
                 },
                 "迷你MP4": {
                     "title": "http://www.minimp4.com/search?q=",
                     "selector": "div.container div.col-xs-7"
                 },
                 "蓝光网": {
                     "title": "http://www.languang.co/?s=",
                     "selector": "div.mi_cont li"
                 },
######
                 "中国高清网": {
                     "title": "http://gaoqing.la/?s=",
                     "selector": "div.mainleft div.post_hover"
                 },
                 "人人美剧": {
                     "title": "http://www.yyetss.com/Search/index/s_keys/",
                     "selector": "div.row div.col-xs-3"
                 },
                 "天天美剧": {
                     "title": "http://www.ttmeiju.vip/index.php/search/index.html?keyword=",
                     "selector": "table.latesttable tr.Scontent1"
                 },
                 "爱美剧": {
                     "title": "https://22v.net/search/",
                     "selector": "div.movie span"
                 },
                 "天天看美剧": {
                     "title": "http://www.msj1.com/?s=",
                     "selector": "div.cat_list div.art_show_top"
                 },
                 "美剧粉": {
                     "title": "http://www.itvfans.com/?s=",
                     "selector": "#main-wrap-left div.home-blog-entry-text"
                 },
                 "BT吧": {
                     "title": "http://www.btba.com.cn/search?keyword=",
                     "selector": "div.left li"
                 },
                 "BT蚂蚁": {
                     "title": "https://www.btmyi.com/search.html?kw=",
                     "selector": "div.row h5.item-title"
                 },
                 "BT天堂": {
                     "title": "http://www.bttt.la/s.php?q=",
                     "selector": "div.ml div.title"
                 },
                 "BT之家": {
                     "title": "http://www.btbtt.co/search-index-keyword-",
                     "selector": "#threadlist table"
                 },
                 "RARBT": {
                     "title": "http://www.rarbt.com/index.php/search/index.html?search=",
                     "selector": "div.ml div.title"
                 },
                 "查片源": {
                     "title": "https://www.chapianyuan.com/?keyword=",
                     "selector": "div.block li"
                 },
                 "磁力猫": {
                     "title": "http://www.cilimao.me/search?word=",
                     "selector": "#Search__content_left___2MajJ div.MovieCard__content___3kv1W"
                 },
                 "磁力站": {
                     "title": "http://oabt004.com/index/index?c=&k=",
                     "selector": "div.link-list-wrapper ul.link-list"
                 },
                 "光影资源": {
                     "title": "http://www.etdown.net/index.php?keyword=",
                     "selector": "tbody.list_4 tr"
                 },
                 "我爱P2P": {
                     "title": "http://www.woaip2p.net/topic/list?categoryId=0&title=",
                     "selector": "tbody td.word-break"
                 },
                 "小浣熊下载": {
                     "title": "https://www.xiaohx.org/search?key=",
                     "selector": "div.search_right li"
                 },
                 "一站搜": {
                     "title": "http://v.yizhansou.com/search?kw=",
                     "selector": "table td.st"
                 },
                 "1337X": {
                     "title": "https://1337x.to/search/",
                     "selector": "table.table-list.table.table-responsive.table-striped td.coll-1.name"
                 },
                 "BT-Scene": {
                     "title": "https://bt-scene.cc/results_.php?q=",
                     "selector": "table.tor td.tname"
                 },
                 "iDope": {
                     "title": "https://idope.se/torrent-list/",
                     "selector": "#div2child div.resultdiv"
                 },
                 "ISOHunt": {
                     "title": "https://isohunt2.net/torrent/?ihq=",
                     "selector": "#serps td.title-row"
                 },
                 "KickAss": {
                     "title": "https://katcr.co/katsearch/page/1/",
                     "selector": "div.table--responsive_vertical div.torrents_table__torrent_name"
                 },
                 "
                 "RARBG": {
                     "title": "http://rarbg.is/torrents.php?search=",
                     "selector": "table.lista2t tr.lista2"
                 },
                 "WorldWide": {
                     "title": "https://worldwidetorrents.me/torrents-search.php?search=",
                     "selector": "div.w3-responsive td.w3-jose"
                 },
                 "Zooqle": {
                     "title": "https://zooqle.com/search?q=",
                     "selector": "div.panel-body a.small"
                 },
             }

  #+END_SRC
  
  #+END_QUOTE

  ** TODO [2019-01-31 Thu] 666ys 百度云资源爬取
  #+BEGIN_QUOTE
  http://www.dygang.net/ys/ 

  豆瓣API 通过影片名称查豆瓣电影信息

  https://api.douban.com/v2/movie/search?q=name

  搜索电影《神秘巨星》：

  https://api.douban.com/v2/movie/search?q=神秘巨星&start=0&count=10
  SCHEDULED:<2019-01-31 Thu 21:02>
  
  #+END_QUOTE

** DONE [2019-01-30 Wed] bt之家 影视bt资源爬虫 www.415.net
   CLOSED: [2019-01-31 Thu 18:56]
   - State "DONE"       from "TODO"       [2019-01-31 Thu 18:56]
  #+BEGIN_QUOTE
  http://www.btbtt03.com/ 

  SCHEDULED:<2019-01-30 Wed 19:51>
  资源有首页电影更新、福利韩国主播、图片可爬取,目前只需要电影！

  下载链接需要js点击触发查看弹窗获取地址,这里比较简单的是，抓包很容易发现下载地址格式都一致，就是aid不一致

  而且aid第一次访问就可以获取到，掩耳盗铃！

  http://www.btbtt03.com/attach-dialog-fid-1-aid-93142-ajax-1-ajax-1.htm
  http://www.btbtt03.com/attach-dialog-fid-1-aid-93060-ajax-1.htm

  http://www.btbtt03.com/attach-download-fid-1-aid-93142.htm
  http://www.btbtt03.com/attach-download-fid-1-aid-93060.htm

  http://www.btbtt03.com/attach-download-fid-1-aid-92987.htm
  
  
  #+END_QUOTE

** DONE [2019-01-30 Wed] 电影资源 mp4ba 资源爬虫开发
   CLOSED: [2019-01-30 Wed 17:46]
   - State "DONE"       from "TODO"       [2019-01-30 Wed 17:46]
  #+BEGIN_QUOTE
  http://www.mp4ba.com/ 

  SCHEDULED:<2019-01-30 Wed 17:46>
  
  #+END_QUOTE

** TODO [2019-01-28 Mon] hls.js 
  #+BEGIN_QUOTE
  https://video-dev.github.io/hls.js/demo/ 

  SCHEDULED:<2019-02-17 Sun 21:49>
  
  #+END_QUOTE

** TODO [2019-01-28 Mon] 记录 Mac 下终端走代理的方法
  #+BEGIN_QUOTE
  https://www.xbug.me/post/2018-04-18-make-Terminal-use-proxy.html 

  SCHEDULED:<2019-01-30 Wed 14:50>
  
  #+END_QUOTE

** TODO [2019-01-28 Mon] 电影天堂 爬虫
  #+BEGIN_QUOTE
  https://www.dytt8.net/ 

  SCHEDULED:<2019-02-17 Sun 12:51>
  
  只能首页爬去 2019新片精品 和 迅雷电影资源模块
  
  #+END_QUOTE

** TODO [2019-01-28 Mon] 我的小书屋首页数据每天更新 爬取
  #+BEGIN_QUOTE
  http://www.shuwu.mobi/26039.html 

  SCHEDULED:<2019-02-01 Fri 12:22>
  
  #+END_QUOTE

** TODO [2019-01-28 Mon] BT部落天堂首页每天更新资源可爬取
  #+BEGIN_QUOTE
  http://www.btbuluo.com/ 

  SCHEDULED:<2019-01-31 Thu 12:18>
  
  #+END_QUOTE

** TODO [2019-01-28 Mon] 每日一文 爬虫
  #+BEGIN_QUOTE
  https://meiriyiwen.com/ 

  SCHEDULED:<2019-02-01 Fri 01:21>
  
  #+END_QUOTE

** TODO [2019-01-27 Sun] m3u8 测试源可爬
  #+BEGIN_QUOTE
  http://www.jktso.com/ 

  SCHEDULED:<2019-02-06 Wed 16:39>
  
  #+END_QUOTE

** TODO [2019-01-27 Sun] 小森林导航 部分资源可以爬
   SCHEDULED: <2019-03-21 Thu>

  #+BEGIN_QUOTE
  http://hao.xsldh.com/ 

  
  #+END_QUOTE

** TODO [2019-01-26 Sat] 华尔街见闻
   SCHEDULED: <2019-03-17 Sun>
  #+BEGIN_QUOTE
  https://wallstreetcn.com/live/global 

  
  #+END_QUOTE

** DONE [2019-01-26 Sat] 电影首发站 更新爬虫
   CLOSED: [2019-01-28 Mon 01:44]
   - State "DONE"       from "TODO"       [2019-01-28 Mon 01:44]
  #+BEGIN_QUOTE
  https://www.dysfz.tv/ 

  SCHEDULED:<2019-01-26 Sat 17:06>
  
  #+END_QUOTE
** DONE [2019-01-25 Fri] telegram bots create
   CLOSED: [2019-01-28 Mon 01:45]
   - State "DONE"       from "TODO"       [2019-01-28 Mon 01:45]
  #+BEGIN_QUOTE
  https://yangsoon.github.io/2017/11/21/telegram-bots-for-developers/ 

  https://yangsoon.github.io/2018/04/14/%E7%94%A8aiotg%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAtelegram%E7%88%AC%E8%99%AB%E6%9C%BA%E5%99%A8%E4%BA%BA/?utm_medium=hao.caibaojian.com&utm_source=hao.caibaojian.com
  SCHEDULED:<2019-01-26 Sat 21:34>

  
  telegram有两种api，一种是bot api，一种是telegram api.
  bot api是基于http访问，telegram api是基于mtproto访问，访问需要加密，

  

1. *创建一个bot*

  访问 =https://telegram.me/botfather=

  /newbot 

  Alright, a new bot. How are we going to call it? Please choose a name for your bot.
2. *通过bot发送消息到channel*
   
   =https://api.telegram.org/bot%s/sendMessage?chat_id=@%s&parse_mode=Markdown&text=%s" % (
   bot_id, chat_id, content)=
   
   Telegram 是藉由下列請求傳送訊息給使用者 GET 

   chat_id

   群組 (Group) 為負數 (例如 -79897268)

   超級群組 (Supergroup) 為負數 (例如 -1001033293696) 或是 @頻道名

   私訊 (Private) 為正數 (例如 109780439)

   頻道 (Channel) 為 @頻道名 (例如 @Telegram)

   *parse_mode* 此為選擇性參數，未設定則為純文字 皆不支援複合使用 (像是 <b><i>重要</i></b>)

   Markdown 可以用 [連結](url), *粗體*, _斜體_, `等寬字`, ```程式碼 (等寬區塊)``` 
   
   HTML 同一般 HTML 用法，支援 b, strong, i, em, a, code, pre 非標籤的 <, >, &, " 需要HTML entity後使用

   text 傳送訊息的內容

   bot_id为注册机器人后返回的内容，chat_id 如chinasrc 频道id，content为需要发送的格式化内容
   
3. telegram bot 内容格式化语法   

   https://core.telegram.org/bots/api#html-style

   换行符 :  %0A （要么 \n）和 %0D%0A （要么 \r\n）

   HTML URL 编码 \t = %09  #=%23
   

   http://www.w3school.com.cn/tags/html_ref_urlencode.html

   <	%3c
   >	%3e
   &	%26
   
   Transform  normal string into  URL string in python (%20 to space etc)
   
   #+BEGIN_SRC python
   import urllib2

   html = '#兼具破案和搞笑一体的剧集《神烦警探》最近命<123>'

   urllib2.quote(html)

   # '%23%E5%85%BC%E5%85%B7%E7%A0%B4%E6%A1%88%E5%'
   #+END_SRC


   
   
   
    

    
  
  #+END_QUOTE

** DONE [2019-01-25 Fri]  这哥们读书有点多啊，啃一本算法导论都得三个月吧。
   CLOSED: [2019-01-25 Fri 19:57]
   - State "DONE"       from "TODO"       [2019-01-25 Fri 19:57]
  #+BEGIN_QUOTE
  https://wdxtub.com/1997/09/11/booklist-page/ 

  SCHEDULED:<2019-01-25 Fri 19:34>
  
  #+END_QUOTE

** DONE [2019-01-25 Fri] favicon.io 在线生成网站
   CLOSED: [2019-01-25 Fri 19:55]
   - State "DONE"       from "TODO"       [2019-01-25 Fri 19:55]
  #+BEGIN_QUOTE

  https://favicon.io/favicon-generator/ 

  SCHEDULED:<2019-01-25 Fri 12:34>
  
  #+END_QUOTE

** TODO [2019-01-24 Thu] orgmode 博客配置文章
  #+BEGIN_QUOTE
  http://www.langdebuqing.com/emacs%20notebook/%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F.html 

  SCHEDULED:<2019-02-03 Sun 17:19>
  

  #+END_QUOTE

** DONE [2019-01-23 Wed] Jinja2 模板语言
   CLOSED: [2019-02-20 Wed 10:05] SCHEDULED: <2019-01-30 Wed>
   - State "DONE"       from "TODO"       [2019-02-20 Wed 10:05]
  #+BEGIN_QUOTE
  https://www.kancloud.cn/manual/jinja2/70423 

  
  #+END_QUOTE

** DONE [2019-01-23 Wed] yasnippet 创建模板学习
   CLOSED: [2019-01-23 Wed 16:47]
   - State "DONE"       from "TODO"       [2019-01-23 Wed 16:47]
  #+BEGIN_QUOTE
  https://github.com/joaotavora/yasnippet 

  SCHEDULED:<2019-01-23 Wed 12:09>
  
  yasnippet official snippet collections
  
  https://github.com/AndreaCrotti/yasnippet-snippets
  
  #+END_QUOTE

** DONE [2019-01-23 Wed] emacs 中英文字体配置文章 
   CLOSED: [2019-01-23 Wed 16:47]
   - State "DONE"       from "TODO"       [2019-01-23 Wed 16:47]
  #+BEGIN_QUOTE
  http://zhuoqiang.me/torture-emacs.html 

  SCHEDULED:<2019-01-23 Wed 11:51>
  
  #+END_QUOTE

** TODO [2019-01-18 Fri] Jabber.el  an XMPP client for Emacs
  #+BEGIN_QUOTE
  https://www.emacswiki.org/emacs/JabberEl 

  https://zhuanlan.zhihu.com/p/43449986
  SCHEDULED:<2019-01-28 Mon 12:00>
  
  #+END_QUOTE

** TODO [2019-01-18 Fri] common lisp 简体中文
   SCHEDULED: <2019-04-30 Tue>

  #+BEGIN_QUOTE
  https://acl.readthedocs.io/en/latest/zhCN/index.html 

  
  #+END_QUOTE

** DONE [2019-01-16 Wed] 不错的es查询语句分析
   CLOSED: [2019-01-23 Wed 16:23]
   - State "DONE"       from "TODO"       [2019-01-23 Wed 16:23]
  #+BEGIN_QUOTE
  https://www.cnblogs.com/elaron/p/7699623.html 

  SCHEDULED:<2019-01-19 Sat 11:36>
  
  #+END_QUOTE

** DONE [2019-01-15 Tue] fluentd plugins 
   CLOSED: [2019-01-15 Tue 19:33]
   - State "DONE"       from "TODO"       [2019-01-15 Tue 19:33]
  #+BEGIN_QUOTE
  https://www.fluentd.org/plugins 

  fluentd regular expression editor

  http://fluentular.herokuapp.com/

  #+BEGIN_SRC python
  ^\[(?<date>[^ ]* [^\,]*)\]\[(?<log_level>.*)\]\[(?<client_ip>.*)\]\[(?<auth_key>.*)\]\[(?<uri>.*)\]\[(?<http_method>.*)\]\[(?<query_data>.*)\]\[(?<file>[^\:]*)\: (?<line>\d+)\: (?<func>\S+)\] - \[(?<msg>.*)\]$

  [2019-01-15 19:03:28 +0800][INFO][ client_ip][auth_key][uri][http_method][query_data][/usr/lib/python2.7//_internal.py: 88: _log] - [172.24.67.146 - - [15/Jan/2019 19:03:28] "POST //1.1" 200 -]

  format='[%(asctime)s][%(levelname)s]' +
  '[ client_ip][auth_key][uri][http_method][query_data]' +
  '[%(pathname)s: %(lineno)s: %(funcName)s] - [%(message)s]',


  #+END_SRC

  - *debug*

    : vim /opt/td-agent/embedded/lib/ruby/gems/2.4.0/gems/fluent-plugin-kafka-0.7.4/lib/fluent/plugin/out_kafka_buffered.rb

    334的trace 改成warn,来查看匹配日志

  SCHEDULED:<2019-01-25 Fri 15:02>
  
  #+END_QUOTE

** DONE [2019-01-15 Tue] install virtualbox in mac 
   CLOSED: [2019-01-15 Tue 12:38]
   - State "DONE"       from "TODO"       [2019-01-15 Tue 12:38]
  #+BEGIN_QUOTE
  https://www.virtualbox.org/wiki/Downloads 

  SCHEDULED:<2019-01-15 Tue 10:54>

  - support usb2.0 and usb3.0

    VirtualBox 6.0.0 Oracle VM VirtualBox Extension Pack

  - install winxp

    iso download : https://msdn.itellyou.cn/
    
    MRX3F-47B9T-2487J-KWKMF-RPWBY
  
  #+END_QUOTE

** DONE python gevent learn
   CLOSED: [2019-01-13 Sun 04:43]
   - State "DONE"       from "TODO"       [2019-01-13 Sun 04:43]
  #+BEGIN_QUOTE
  http://sdiehl.github.io/gevent-tutorial/ 

  

  SCHEDULED:<2019-01-13 Sun 03:15>
  
  #+END_QUOTE

** DONE 如何使用org-mode 添加音乐专辑
   CLOSED: [2019-01-24 Thu 12:22]
   - State "DONE"       from "TODO"       [2019-01-24 Thu 12:22] \\
     还是需要通过channel分享,最快捷的消息,才是最有价值的消息
  #+BEGIN_QUOTE
  https://orgmode.org/manual/Property-syntax.html 

  SCHEDULED:<2019-01-23 Wed 01:55>
  
  #+END_QUOTE

** TODO hackthebox 邀请码
  #+BEGIN_QUOTE
  https://www.hackthebox.eu/ 

  SCHEDULED:<2019-05-16 Wed 19:27>
  

  #+END_QUOTE

** DONE problem-solving-with-algorithms-and-data-structure-using-python 
   CLOSED: [2019-01-14 Mon 10:07]
  #+BEGIN_QUOTE
  https://facert.gitbooks.io/python-data-structure-cn/ 

  SCHEDULED:<2019-01-13 Sat 14:38>
  
  #+END_QUOTE

** TODO flask 系列
  #+BEGIN_QUOTE
  https://foofish.net/flask-resource.html 

  
  #+END_QUOTE

** DONE aria2 配置
   CLOSED: [2019-01-11 Fri 11:24]
   - State "DONE"       from "TODO"       [2019-01-11 Fri 11:24]
  #+BEGIN_QUOTE
  https://github.com/ngosang/trackerslist 

  https://aria2.github.io/manual/en/html/aria2c.html#options

  SCHEDULED:<2019-01-11 Fri 10:40>

  
  
  ~/.aria2 创建文件

  aria2.log （日志，空文件就行）

  aria2.session （下载历史，空文件就行）

  aria2.conf （配置文件）

  HideRun.vbs （隐藏cmd窗口运行用到的）

  : aria2c --enable-rpc --rpc-listen-all

  *dht* 

  找个热门种子(千万建议是种子，而不是磁力链接)，然后下一波，挂着做种，过几个小时后退出Aria2，
  或者等Aria2会话自动保存，你会发现dht.dat从空文件变成有数据了
  
  #+END_QUOTE

** DONE mac 系统文件过大 磁盘清理
   CLOSED: [2019-01-11 Fri 11:11]

   - State "DONE"       from "TODO"       [2019-01-11 Fri 11:11]
  #+BEGIN_QUOTE
  https://blog.csdn.net/hu434587115/article/details/72874811 

  SCHEDULED:<2019-01-11 Fri 10:27>

  1. 清理应用缓存文件（8G）
  
     rm -rf ~/Library/Caches/*

  2. find top 50 
     
     alias find_large50="sudo du -a / | sort -n -r | head -n 50"


     
  
  #+END_QUOTE

** DONE sync + bt source
   CLOSED: [2019-01-15 Tue 12:39]
   - State "DONE"       from "TODO"       [2019-01-15 Tue 12:39]
  #+BEGIN_QUOTE
  http://wherebt.com/ 

  SCHEDULED:<2019-01-15 Tue 22:03>
  
  #+END_QUOTE

** TODO 小米路由配置aria2
   :PROPERTIES:
   :END:
  #+BEGIN_QUOTE
  https://www.jianshu.com/p/a23330cf8ee8 

  SCHEDULED:<2019-01-29 Tue 11:58>
  
  #+END_QUOTE

** DONE pyim 中文库和中文字体配置
   CLOSED: [2019-01-13 Sun 00:21]
   - State "DONE"       from "TODO"       [2019-01-13 Sun 00:21]
  #+BEGIN_QUOTE
  https://github.com/redguardtoo/emacs.d#saveload-windows-layout 

  下载pyim个人字典后 c-\\ 来回切换输入中英文真的很方便
  
  唯一需要做的就是记住pyim的快捷键

  SCHEDULED:<2019-01-12 Thu 16:56>
  
  #+END_QUOTE

** TODO exwm 能否支持管理mpv和pdf阅读

  #+BEGIN_QUOTE
  https://wiki.archlinux.org/index.php/EXWM 

  SCHEDULED:<2019-01-29 Wed 16:42>
  
  #+END_QUOTE

** DONE 端口转发
   CLOSED: [2019-01-23 Wed 17:48] SCHEDULED: <2019-01-23 Wed>
   - State "DONE"       from "TODO"       [2019-01-23 Wed 17:48]

#+BEGIN_QUOTE

   https://mp.weixin.qq.com/s/8HeeDC5x5xozElN8GzQLLw 

   #+ATTR_HTML: :width 60% :height 60% 
   [[file:images/screenshot/20190123165958.png]]
  
   *三种端口转发的方法,socat,iptables,ssh*
  
   socat是一个很强大的socket工具，这里我们拿来做端口转向，需要在B机器上运行：

   : socat -d -d TCP4-LISTEN:8080,reuseaddr,fork,su=nobody TCP4:c_ip:80

   这样，我们通过A访问B的8080端口的时候，就会访问到C的80端口了，如图上半部分所示

   iptables是大名鼎鼎的linux下的防火墙，也可以做端口转向，在B机器上运行：
  
   : iptables -t nat -A PREROUTING -d b_ip -p tcp --dport 80 -j DNAT --to-destination c_ip:8080
 
   : iptables -t nat -A POSTROUTING -d c_ip -p tcp --dport 8080 -j SNAT --to--source b_ip

   ssh就不多说了，对应的场景是图上最下面的部分，需要在B上ssh登录C，中间创建一个转发隧道：

   : ssh -gfNL 8080:d_ip:80 root@c_ip

#+END_QUOTE

** DONE pyim 拼音输入法
   CLOSED: [2019-01-18 Fri 11:11]
   - State "DONE"       from "TODO"       [2019-01-18 Fri 11:11]
  #+BEGIN_QUOTE
  
  https://github.com/tumashu/pyim#org4a82653 

  SCHEDULED:<2019-01-17 Thu 14:20>
  
  #+BEGIN_VERSE
  C-n 或 M-n 或 + 或 .	向下翻页
  C-p 或 M-p 或 - 或 ,	向上翻页
  C-f	选择下一个备选词
  C-b	选择上一个备选词
  SPC	确定输入
  RET 或 C-m	字母上屏
  C-c	取消输入
  C-g	取消输入并保留已输入的中文
  TAB	模糊音调整
  DEL 或 BACKSPACE	删除最后一个字符
  C-DEL 或 C-BACKSPACE	删除最后一个拼音
  M-DEL 或 M-BACKSPACE	删除最后一个拼音
  #+END_VERSE

  #+END_QUOTE

** TODO emacs video playlist

  #+BEGIN_QUOTE
  https://www.zhihu.com/question/20239473 

  SCHEDULED:<2019-01-26 Sun 04:50>
  
  #+END_QUOTE

** DONE A Screencast Video About Advanced Featurs of Emacs Org Mode
   CLOSED: [2019-01-28 Mon 01:46]
   - State "DONE"       from "TODO"       [2019-01-28 Mon 01:46]
  #+BEGIN_QUOTE
  https://karl-voit.at/2018/12/08/niklas-carlsson-video/ 

  SCHEDULED:<2019-01-27  04:35>
  
  #+END_QUOTE

** DONE emacs learn video list
   CLOSED: [2019-01-28 Mon 01:46]
   - State "DONE"       from "TODO"       [2019-01-28 Mon 01:46]
  #+BEGIN_QUOTE
  http://emacslife.com/videos.html 

  SCHEDULED:<2019-01-27 Mon 04:33>
  
  #+END_QUOTE

** UNDO elfeed Emacs Web Feed Reader
   CLOSED: [2019-01-23 Wed 16:38]
   - State "UNDO"       from "TODO"       [2019-01-23 Wed 16:38] \\
     目前没有rss强烈需求
  #+BEGIN_QUOTE
  https://github.com/skeeto/elfeed 

  SCHEDULED:<2019-01-21 Tue 01:43>
  
  #+END_QUOTE

** UNDO Sacha Chua emacs news 
   CLOSED: [2019-01-23 Wed 16:39]
   - State "UNDO"       from "TODO"       [2019-01-23 Wed 16:39]
  #+BEGIN_QUOTE
  http://sachachua.com/blog/ 

  SCHEDULED:<2019-01-27 16:02>
  
  #+END_QUOTE

** DONE Using Emacs Series
   CLOSED: [2019-01-23 Wed 16:23]
   - State "DONE"       from "TODO"       [2019-01-23 Wed 16:23]
  #+BEGIN_QUOTE
  https://cestlaz.github.io/stories/emacs/ 

  SCHEDULED:<2019-01-19 Sun 14:52>
  
  #+END_QUOTE

** DONE Swaroop, The Dreamer 
   CLOSED: [2019-01-15 Tue 12:38]
   - State "DONE"       from "TODO"       [2019-01-15 Tue 12:38]
  #+BEGIN_QUOTE
  https://swaroopch.com/about/ 

  SCHEDULED:<2019-01-15 Sat 12:35>
  
  #+END_QUOTE

** DONE Sams Teach Yourself Emacs in 24 Hours                                
   CLOSED: [2019-01-24 Thu 12:29]
   :PROPERTIES:
   :LAST_REPEAT: [2019-01-24 Thu 12:28]
   :END:

   - State "DONE"       from "TODO"       [2019-01-24 Thu 12:29]
  #+BEGIN_QUOTE
  http://www.emacs.uniyar.ac.ru/doc/em24h/ 

  SCHEDULED:<2019-01-25 Fri 00:00>
  
  #+END_QUOTE

** DONE emacs python ide config
   CLOSED: [2019-01-23 Wed 16:10]
   - State "DONE"       from "TODO"       [2019-01-23 Wed 16:10]
  #+BEGIN_QUOTE
  https://steelkiwi.com/blog/emacs-configuration-working-python/ 

  https://github.com/Nanue1/dot-emacs 

  SCHEDULED:<2019-01-24 Fri 21:41>

   anaconda-mode 是 spacemacs 使用的跳转module

   https://kevinjiang.info/2018/03/20/Emacs%E4%B8%8BPython%E5%BC%80%E5%8F%91%E9%85%8D%E7%BD%AE/

   https://github.com/proofit404/anaconda-mode

   M-.	anaconda-mode-find-definitions	跳转到定义处。如果不使用anaconda-mode，则是绑定到elpy的elpy-goto-definition，elpy有时候工作得不是很好

   M-?	anaconda-mode-show-doc	在另外一个window中显示光标当前所在位置符号的文档

   M-,	anaconda-mode-find-assignments	跳转到变量赋值位置

   M-r	anaconda-mode-find-references	在另外一个window中显示光标当前所在位置变量的所有引用

   M-*	anaconda-mode-go-back	返回上一个位置

   
  
  #+END_QUOTE

** DONE approach for structuring a Flask RESTPlus web application 
   CLOSED: [2019-01-15 Tue 10:48]
   - State "DONE"       from "TODO"       [2019-01-15 Tue 10:48]
  #+BEGIN_QUOTE
  https://medium.freecodecamp.org/structuring-a-flask-restplus-web-service-for-production-builds-c2ec676de563 

  SCHEDULED:<2018-12-31 Mon 21:17>
  
  #+END_QUOTE

** TODO python黑魔法---上下文管理器 contextor
  #+BEGIN_QUOTE
  https://www.jianshu.com/p/d53449f9e7e0 

  SCHEDULED:<2019-01-01 Tue 15:15>
  
  #+END_QUOTE

** DONE python 进阶
   CLOSED: [2019-01-11 Fri 12:41] SCHEDULED: <2019-01-09 Wed>
   :PROPERTIES:
   :LAST_REPEAT: [2019-01-09 Wed 14:00]
   :END:
   - State "DONE"       from "TODO"       [2019-01-11 Fri 12:41]
   - State "DONE"       from "TODO"       [2019-01-09 Wed 14:00]
  #+BEGIN_QUOTE
  https://eastlakeside.gitbooks.io/interpy-zh/content/context_managers/handle_exception.html 

  
  #+END_QUOTE

** DONE telegram Proxy sponsor channel set
   CLOSED: [2018-12-31 Mon 14:05]
   - State "DONE"       from "TODO"       [2018-12-31 Mon 14:05]
  #+BEGIN_QUOTE

  docker搭建mtpro代理

  : docker run -d -p5656:443 --name=mtproto-proxy --restart=always -v proxy-config:/data telegrammessenger/proxy:latest

  #+BEGIN_SRC bash
  [+] No secret passed. Will generate 1 random ones.
  [*] Final configuration:
  [*]   Secret 1: e29c65cbd11d8ea328233b3fe96f988b
  [*]   tg:// link for secret 1 auto configuration: tg://proxy?server=103.1.153.220&port=443&secret=e29c65cbd11d8ea328233b3fe96f988b
  [*]   t.me link for secret 1: https://t.me/proxy?server=103.1.153.220&port=443&secret=e29c65cbd11d8ea328233b3fe96f988b
  [*]   Tag: no tag
  [*]   External IP: 103.1.153.220
  [*]   Make sure to fix the links in case you run the proxy on a different port.


  #+END_SRC

  设置主机文件句柄

  : echo "ulimit -SHn 1048576" >> /etc/rc.local

  sock连接过多导致mtpro代理无法正常转发，可以调大文件句柄

  Proxy sponsor channel set :
  
  
  利用Telegram bot @MTProxybot,按照提示说明一步一步配置,等待一小时即可

  tag : 696851624691c7e4dfcd4e5778c579d7

  docker run -d -p 4444:443 --name=mtproto-proxy --restart=always -v proxy-config:/data -e SECRET=9f8a0c0700c1b534a3f67b675a89e73a -e TAG=696851624691c7e4dfcd4e5778c579d7   telegrammessenger/proxy:latest

  
  =newproxy=

  =myproxies=

  =edit promotion=

  个人搭建公益代理: 

  =https://t.me/proxy?server=139.180.192.255&port=443&secret=62b1466f8b1860fd9d2c80f5585971c6=

  


  
  
  
  
  DEADLINE:<2018-12-31 Mon 12:13>
  
  #+END_QUOTE

** TODO flask  源码解读
  #+BEGIN_QUOTE
  https://amberno1111.github.io/tags/Flask/ 

 SCHEDULED: <2018-12-30 ++1d Sun 19:48>
  
  #+END_QUOTE

** UNDO 添加github搜索快捷键辅助github pomodoro task
   CLOSED: [2018-12-31 Mon 14:05]
   - State "UNDO"       from "TODO"       [2018-12-31 Mon 14:05]
  #+BEGIN_QUOTE
  https://github.com/topics/flask

  DEADLINE:<2018-12-31 Mon 16:55>
  
  #+END_QUOTE

** DONE Python 博客文章知识点不错
   CLOSED: [2019-01-23 Wed 16:24] SCHEDULED: <2019-01-19 Wed>
   :PROPERTIES:
   :LAST_REPEAT: [2019-01-09 Wed 13:59]
   :END:
   - State "DONE"       from "TODO"       [2019-01-23 Wed 16:24]
   - State "DONE"       from "TODO"       [2019-01-09 Wed 13:59]
  #+BEGIN_QUOTE
  https://wdxtub.com/2016/03/24/thinking-in-python/
  
  #+END_QUOTE

** DONE python pomodoro task
   CLOSED: [2019-01-13 Sun 00:32] SCHEDULED: <2019-01-10 Thu>
   :PROPERTIES:
   :LAST_REPEAT: [2019-01-09 Wed 14:01]
   :END:
   - State "DONE"       from "TODO"       [2019-01-13 Sun 00:32]
   - State "DONE"       from "TODO"       [2019-01-09 Wed 14:01]
   - State "DONE"       from "TODO"       [2018-12-30 Sun 15:05]
   - State "TODO"       from "DONE"       [2018-12-30 Sun 15:04]
   - State "DONE"       from "TODO"       [2018-12-30 Sun 14:35]
   - State "DONE"       from "TODO"       [2018-12-29 Sat 19:49]
  #+BEGIN_QUOTE
  https://zhuanlan.zhihu.com/p/32818342
  https://zhuanlan.zhihu.com/p/42628522
  #+END_QUOTE
** DONE github pomodoro task
   CLOSED: [2019-01-04 Fri 10:50] SCHEDULED: <2018-12-31 Mon>
   :PROPERTIES:
   :LAST_REPEAT: [2018-12-30 Sun 15:09]
   :END:
   - State "DONE"       from "TODO"       [2019-01-04 Fri 10:50]
   - State "DONE"       from "TODO"       [2018-12-30 Sun 15:09]
   - State "DONE"       from "TODO"       [2018-12-29 Sat 19:50]
   - State "DONE"       from "TODO"       [2018-12-29 Sat 12:02]
  #+BEGIN_QUOTE
  https://github.com/Nanue1
  
  #+END_QUOTE

** DONE 抽时间研究下这位老大爷的emacs博客
   CLOSED: [2019-01-15 Tue 10:47] SCHEDULED: <2019-01-14 Fri>
   - State "DONE"       from "TODO"       [2019-01-15 Tue 10:47] \\
     about 的联系方式写的不错 irc
   #+BEGIN_QUOTE
   https://hack.org/mc/blog/pomodoro.html
   #+END_QUOTE

** DONE 研究下人生发财靠康波 理论 
   CLOSED: [2018-12-26 Wed 18:06] DEADLINE: <2018-12-27 Thu>
   - State "DONE"       from "TODO"       [2018-12-26 Wed 18:06]
     #+BEGIN_QUOTE
     https://zhuanlan.zhihu.com/p/30688238
     [2018-12-25 Tue 16:19]
     康德拉季耶夫周期：1926年俄国经济学家康德拉季耶夫提出的一种为期50-60年的经济周期。

     踏准经济周期才能更容易逆袭，老铁你听懂了吗？

     五、对于未来投资的建议

     1、在未来的投资目标：

     未来五年是资产的下降期，这个时候大家尽量持有流动性好的资产，而不要持有流动性不好的资产。资产要求：
     第一目标是保值，第二是流动性。这两个是未来五年大家在投资时应该注意的一个最核心的问题。

     2、现状预测：

     2019年是中国经济的最差年景，在另一套理论中也是可以解释的。所以美元现在还没有到达这波牛市的高点，这
     波高点应该在明年中期。明年上半年美国也会出现滞胀，那时候美联储会连续加息，流动性会出问题，美国经济
     掉头往下，通胀掉头往下，就会出现经济的调整。这就是2017年的中期可以看到的。

     3、风险控制：
     
     2018年到2019年是康波周期的万劫不复之年，60年当中的最差阶段，所以一定要控制18、19年的风险。在此之前
     做好充分的现金准备，现在可以发债，五年之后还有现金。

     4、人生规划：2016年至2017年卖掉投资性房地产和新三板股权，买进黄金，休假两年，2019年重新开始。

     五色土认为：在休假的两年中，人可以休息，资金可以继续赚取不动产抵押理财利息。
     #+END_QUOTE

** DONE 豆瓣评分9.0以上专辑聆听
   CLOSED: [2019-01-15 Tue 12:39]
   :PROPERTIES:
   :LAST_REPEAT: [2019-01-13 Sun 00:48]
   :END:
   - State "DONE"       from "TODO"       [2019-01-15 Tue 12:39]
   - State "DONE"       from "TODO"       [2019-01-13 Sun 00:48] \\
     Inside Llewyn Davis

     1. Hang Me, Oh Hang Me - By Oscar Isaac
     2. Fare Thee Well (Dink's Song) - By Marcus Mumford & Oscar Isaac
     3. The Last Thing on My Mind - By Stark Sands With Punch Brothers
     4. Five Hundred Miles - By Justin Timberlake, Carey Mulligan & Stark Sands
     5. Please Mr. Kennedy - By Justin Timberlake, Oscar Isaac & Adam Driver
     6. Green, Green Rocky Road - By Oscar Isaac
     7. The Death of Queen Jane - By Oscar Isaac
     8. The Roving Gambler (With The Down Hill Strugglers) - By John Cohen
     9. The Shoals of Herring (With Punch Brothers) - By Oscar Isaac
     10. The Auld Triangle - By Chris Thile, Chris Eldridge, Marcus Mumford, Justin Timberlake & Gabe Witcher
     11. The Storms Are on the Ocean - By Nancy Blake
     12. Fare Thee Well (Dink's Song) - By Oscar Isaac
     13. Farewell (unreleased studio version) - By Bob Dylan
     14. Green, Green Rocky Road - By Dave Van Ronk
     
   #+BEGIN_QUOTE
   SCHEDULED: <2019-01-15 Tue .1w>
   :PROPERTIES:
   :LAST_REPEAT: [2018-12-25 Tue 13:14]
   :END:
   - State "DONE"       from "TODO"       [2018-12-25 Tue 13:14] \\
     专辑：我去2000年
     
     曲目 
     
     1. NEW BOY
     2. 妈妈，我..
     3. 在希望的田野上
     4. 那些花儿
     5. 我去2000年
     6. 旅途
     7. 别，千万别
     8. 白桦树
     9. 活着
     10. 召唤
     11. 九月
     12. 火车开往冬天
   https://www.douban.com/doulist/241262/?start=0&sort=seq&playable=0&sub_type=
 
   [2018-12-25 Tue 11:54]
   #+END_QUOTE

** DONE spacemacs rocks git  config 
   #+BEGIN_QUOTE
   CLOSED: [2018-12-25 Tue 11:36] DEADLINE: <2018-12-25 Tue> SCHEDULED: <2018-12-24 Mon>

   - State "DONE"       from "TODO"       [2018-12-25 Tue 11:36] \\
     zilongshanren 配置前半部分不定义hacking enacs 1-7 都仔细看过了，很多配置和使用emacs的细节很受用，*推荐*
     
   https://github.com/zilongshanren/emacs.d/blob/develop/lisp/init-org.el
 
   [2018-12-24 Mon 13:51]

   #+END_QUOTE


 
 
 
 
   